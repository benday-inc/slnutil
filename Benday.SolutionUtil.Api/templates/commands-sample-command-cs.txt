using Benday.CommandsFramework;

namespace %%PROJECT_NAMESPACE%%;

[Command(Name = "sample",
    Description = "This is a sample command that runs synchronously.")]
public class SampleCommand : SynchronousCommand
{
    public SampleCommand(CommandExecutionInfo info, ITextOutputProvider outputProvider) :
        base(info, outputProvider)
    {

    }

    public override ArgumentCollection GetArguments()
    {
        var args = new ArgumentCollection();

        args.AddString("message")
            .AsRequired()
            .WithDescription(
                "Message to print out.");

        args.AddBoolean("time")
            .AsNotRequired()
            .AllowEmptyValue()
            .WithDescription("If true, command prints the time before the message.")
            .WithDefaultValue(false);

        return args;
    }

    protected override void OnExecute()
    {
        var message = Arguments.GetStringValue("message");
        var printTime = Arguments.GetBooleanValue("time");

        if (printTime == true)
        {
            WriteLine($"The time is {DateTime.Now.ToString()}");
        }

        WriteLine(message);
    }
}